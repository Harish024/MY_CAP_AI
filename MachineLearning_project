import pandas as pd
from pandas.plotting import scatter_matrix
from matplotlib import pyplot
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import StratifiedKFold
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.naive_bayes import GaussianNB
from sklearn.svm import SVC
from sklearn import model_selection
from sklearn.ensemble import VotingClassifier
from pandas import read_csv
data=pd.read_csv("IRIS.csv")
data
data.describe()
print(data.groupby("species").size())
data.plot(kind='box',subplots=True,layout=(2,2))
pyplot.show()
data.hist()
pyplot.show()
scatter_matrix(data)
pyplot.show()
array=data.values
x=array[:,0:4]
y=array[:,4]
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.20, random_state=1)
models=[]
models.append(('LR',LogisticRegression(solver='liblinear',multi_class='ovr')))
models.append(('LDA',LinearDiscriminantAnalysis()))
models.append(('KNN',KNeighborsClassifier()))
models.append(('NB',GaussianNB()))
models.append(('SVM',SVC(gamma='auto')))
results=[]
names=[]
for name, model in models:
    kfold = StratifiedKFold(n_splits=10  )
    cv_results=cross_val_score(model,x_train,y_train,cv=kfold,scoring='accuracy')
    results.append(name)
    print('%s : %f (%f)' %(name,cv_results.mean(),cv_results.std()))
#make prediction on svm 
model=SVC(gamma="auto")
model.fit(x_train,y_train)
pred=model.predict(x_test)
print(accuracy_score(y_test,pred))
print(confusion_matrix(y_test,pred))
print(classification_report(y_test,pred))
